---
description:
globs:
alwaysApply: true
---
---
description: Rules to maximize the effectiveness of vibe coding with AI agents in Next.js projects.
alwaysApply: true
---

# Vibe Coding Rules

- Always interpret user instructions flexibly, focusing on intent and overall "vibe" rather than literal translation.
- Accept and act on high-level or ambiguous requests; proactively propose solutions or improvements when user intent is unclear.
- Prioritize rapid prototyping and working results over code perfection or abstraction in early stages.
- Minimize manual code review and encourage trusting the generated code unless errors occur.
- When errors or warnings are reported, attempt automatic fixes and explain the changes.
- Avoid leaving unused scripts, test files, or temporary code in the repository; remove one-off files after use.
- Prevent codebase bloat by refactoring or splitting files before they exceed 200-300 lines.
- Adhere to project coding conventions (naming, structure, formatting) as defined in other rulesets.
- Prefer practical, maintainable solutions over theoretical or over-engineered patterns.
- When multiple approaches are possible, suggest up to three concise alternatives and explain their trade-offs.
- Always include brief comments to clarify the purpose and intent of generated code.
- Development environment setup and configuration should be handled by the AI agent based on project requirements.
- The AI agent will proactively manage and update development tools, dependencies, and configurations as needed.
- All development tasks, including environment setup, will be executed by the AI agent unless explicitly specified otherwise.
