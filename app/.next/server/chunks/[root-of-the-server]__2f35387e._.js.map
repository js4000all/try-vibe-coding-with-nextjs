{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/app/src/lib/models/book.ts"],"sourcesContent":["import { z } from \"zod\";\n\nexport const bookSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  authors: z.array(z.string()).optional(),\n  description: z.string().optional(),\n  imageUrl: z.string().optional(),\n  publishedDate: z.string().optional(),\n  publisher: z.string().optional(),\n  pageCount: z.number().optional(),\n  memo: z.string().optional(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n\nexport type Book = z.infer<typeof bookSchema>;\n\nexport const createBookSchema = bookSchema.omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type CreateBook = z.infer<typeof createBookSchema>;\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,aAAa,uLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,IAAI,uLAAA,CAAA,IAAC,CAAC,MAAM;IACZ,OAAO,uLAAA,CAAA,IAAC,CAAC,MAAM;IACf,SAAS,uLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uLAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ;IACrC,aAAa,uLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,UAAU,uLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,eAAe,uLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,WAAW,uLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,WAAW,uLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,MAAM,uLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACzB,WAAW,uLAAA,CAAA,IAAC,CAAC,IAAI;IACjB,WAAW,uLAAA,CAAA,IAAC,CAAC,IAAI;AACnB;AAIO,MAAM,mBAAmB,WAAW,IAAI,CAAC;IAC9C,IAAI;IACJ,WAAW;IACX,WAAW;AACb","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/app/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") {\n  globalForPrisma.prisma = prisma;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhE,wCAA2C;IACzC,gBAAgB,MAAM,GAAG;AAC3B","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/app/src/app/api/books/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { createBookSchema } from \"@/lib/models/book\";\nimport { prisma } from \"@/lib/prisma\";\n\nexport async function GET() {\n  try {\n    const books = await prisma.book.findMany({\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    return NextResponse.json(books);\n  } catch (error) {\n    console.error(\"Error fetching books:\", error);\n    return NextResponse.json(\n      { error: \"Failed to fetch books\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json();\n    const validatedData = createBookSchema.parse(body);\n\n    const book = await prisma.book.create({\n      data: validatedData,\n    });\n\n    return NextResponse.json(book, { status: 201 });\n  } catch (error) {\n    console.error(\"Error saving book:\", error);\n    return NextResponse.json({ error: \"Failed to save book\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,QAAQ,MAAM,sHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACvC,SAAS;gBACP,WAAW;YACb;QACF;QAEA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,gBAAgB,8HAAA,CAAA,mBAAgB,CAAC,KAAK,CAAC;QAE7C,MAAM,OAAO,MAAM,sHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACpC,MAAM;QACR;QAEA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC/C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACF","debugId":null}}]
}