{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/app/src/lib/api/books.ts"],"sourcesContent":["import axios from \"axios\";\nimport type { Book as GoogleBook } from \"./google-books\";\nimport type { CreateBook } from \"../models/book\";\n\nconst GOOGLE_BOOKS_API_BASE_URL = \"https://www.googleapis.com/books/v1\";\n\nexport interface Book {\n  id: string;\n  title: string;\n  authors?: string[];\n  description?: string;\n  imageLinks?: {\n    thumbnail?: string;\n  };\n  publishedDate?: string;\n  publisher?: string;\n  pageCount?: number;\n}\n\nexport interface BooksResponse {\n  items: {\n    id: string;\n    volumeInfo: Omit<GoogleBook, \"id\">;\n  }[];\n  totalItems: number;\n}\n\nexport const searchBooks = async (query: string): Promise<GoogleBook[]> => {\n  try {\n    const response = await axios.get<BooksResponse>(\n      `${GOOGLE_BOOKS_API_BASE_URL}/volumes`,\n      {\n        params: {\n          q: `intitle:${query}`,\n          key: process.env.NEXT_PUBLIC_GOOGLE_BOOKS_API_KEY,\n        },\n      }\n    );\n\n    return response.data.items.map((item) => ({\n      id: item.id,\n      ...item.volumeInfo,\n    }));\n  } catch (error) {\n    console.error(\"Error searching books:\", error);\n    return [];\n  }\n};\n\nexport const saveBook = async (book: CreateBook): Promise<void> => {\n  try {\n    await axios.post(\"/api/books\", book);\n  } catch (error) {\n    console.error(\"Error saving book:\", error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":";;;;AAkCe;AAlCf;;AAIA,MAAM,4BAA4B;AAuB3B,MAAM,cAAc,OAAO;IAChC,IAAI;QACF,MAAM,WAAW,MAAM,0LAAA,CAAA,UAAK,CAAC,GAAG,CAC9B,GAAG,0BAA0B,QAAQ,CAAC,EACtC;YACE,QAAQ;gBACN,GAAG,CAAC,QAAQ,EAAE,OAAO;gBACrB,GAAG;YACL;QACF;QAGF,OAAO,SAAS,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAS,CAAC;gBACxC,IAAI,KAAK,EAAE;gBACX,GAAG,KAAK,UAAU;YACpB,CAAC;IACH,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,EAAE;IACX;AACF;AAEO,MAAM,WAAW,OAAO;IAC7B,IAAI;QACF,MAAM,0LAAA,CAAA,UAAK,CAAC,IAAI,CAAC,cAAc;IACjC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/app/src/components/BookSearch.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { MagnifyingGlassIcon } from \"@heroicons/react/24/outline\";\nimport { searchBooks, saveBook } from \"@/lib/api/books\";\nimport type { Book as GoogleBook } from \"@/lib/api/google-books\";\nimport type { CreateBook } from \"@/lib/models/book\";\n\ninterface BookSearchProps {\n  onSelect: (book: GoogleBook) => void;\n}\n\nexport default function BookSearch({ onSelect }: BookSearchProps) {\n  const [query, setQuery] = useState(\"\");\n  const [books, setBooks] = useState<GoogleBook[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSearch = async () => {\n    if (!query.trim()) return;\n\n    setIsLoading(true);\n    setError(null);\n    const results = await searchBooks(query);\n    setBooks(results);\n    setIsLoading(false);\n  };\n\n  const handleBookSelect = async (book: GoogleBook) => {\n    try {\n      const bookData: CreateBook = {\n        title: book.title,\n        authors: book.authors,\n        description: book.description,\n        imageUrl: book.imageLinks?.thumbnail,\n        publishedDate: book.publishedDate,\n        publisher: book.publisher,\n        pageCount: book.pageCount,\n      };\n\n      await saveBook(bookData);\n      onSelect(book);\n      setBooks([]);\n      setQuery(\"\");\n    } catch (error) {\n      setError(\"書籍の保存に失敗しました\");\n      console.error(\"Error saving book:\", error);\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex gap-2\">\n        <div className=\"relative flex-1\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && handleSearch()}\n            placeholder=\"書籍名で検索\"\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n          <button\n            onClick={handleSearch}\n            disabled={isLoading}\n            className=\"absolute right-2 top-1/2 -translate-y-1/2 p-1 text-gray-500 hover:text-gray-700\"\n          >\n            <MagnifyingGlassIcon className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </div>\n\n      {isLoading && (\n        <div className=\"mt-4 text-center text-gray-500\">検索中...</div>\n      )}\n\n      {error && <div className=\"mt-4 text-center text-red-500\">{error}</div>}\n\n      {books.length > 0 && (\n        <div className=\"mt-4\">\n          <h3 className=\"text-lg font-medium mb-2\">検索結果</h3>\n          <div className=\"max-h-[calc(100vh-16rem)] overflow-y-auto space-y-4 pr-2\">\n            {books.map((book) => (\n              <div\n                key={book.id}\n                onClick={() => handleBookSelect(book)}\n                className=\"flex gap-4 p-4 border rounded-lg cursor-pointer hover:bg-gray-50\"\n              >\n                {book.imageLinks?.thumbnail && (\n                  <img\n                    src={book.imageLinks.thumbnail}\n                    alt={book.title}\n                    className=\"w-20 h-28 object-cover\"\n                  />\n                )}\n                <div>\n                  <h3 className=\"font-medium\">{book.title}</h3>\n                  {book.authors && (\n                    <p className=\"text-sm text-gray-600\">\n                      {book.authors.join(\", \")}\n                    </p>\n                  )}\n                  {book.publisher && (\n                    <p className=\"text-sm text-gray-500\">{book.publisher}</p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAQe,SAAS,WAAW,EAAE,QAAQ,EAAmB;;IAC9D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,eAAe;QACnB,IAAI,CAAC,MAAM,IAAI,IAAI;QAEnB,aAAa;QACb,SAAS;QACT,MAAM,UAAU,MAAM,CAAA,GAAA,6HAAA,CAAA,cAAW,AAAD,EAAE;QAClC,SAAS;QACT,aAAa;IACf;IAEA,MAAM,mBAAmB,OAAO;QAC9B,IAAI;YACF,MAAM,WAAuB;gBAC3B,OAAO,KAAK,KAAK;gBACjB,SAAS,KAAK,OAAO;gBACrB,aAAa,KAAK,WAAW;gBAC7B,UAAU,KAAK,UAAU,EAAE;gBAC3B,eAAe,KAAK,aAAa;gBACjC,WAAW,KAAK,SAAS;gBACzB,WAAW,KAAK,SAAS;YAC3B;YAEA,MAAM,CAAA,GAAA,6HAAA,CAAA,WAAQ,AAAD,EAAE;YACf,SAAS;YACT,SAAS,EAAE;YACX,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,QAAQ,KAAK,CAAC,sBAAsB;QACtC;IACF;IAEA,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAI,WAAU;0BACb,cAAA,4TAAC;oBAAI,WAAU;;sCACb,4TAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAW,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;4BACvC,aAAY;4BACZ,WAAU;;;;;;sCAEZ,4TAAC;4BACC,SAAS;4BACT,UAAU;4BACV,WAAU;sCAEV,cAAA,4TAAC,+TAAA,CAAA,sBAAmB;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;YAKpC,2BACC,4TAAC;gBAAI,WAAU;0BAAiC;;;;;;YAGjD,uBAAS,4TAAC;gBAAI,WAAU;0BAAiC;;;;;;YAEzD,MAAM,MAAM,GAAG,mBACd,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;wBAAG,WAAU;kCAA2B;;;;;;kCACzC,4TAAC;wBAAI,WAAU;kCACZ,MAAM,GAAG,CAAC,CAAC,qBACV,4TAAC;gCAEC,SAAS,IAAM,iBAAiB;gCAChC,WAAU;;oCAET,KAAK,UAAU,EAAE,2BAChB,4TAAC;wCACC,KAAK,KAAK,UAAU,CAAC,SAAS;wCAC9B,KAAK,KAAK,KAAK;wCACf,WAAU;;;;;;kDAGd,4TAAC;;0DACC,4TAAC;gDAAG,WAAU;0DAAe,KAAK,KAAK;;;;;;4CACtC,KAAK,OAAO,kBACX,4TAAC;gDAAE,WAAU;0DACV,KAAK,OAAO,CAAC,IAAI,CAAC;;;;;;4CAGtB,KAAK,SAAS,kBACb,4TAAC;gDAAE,WAAU;0DAAyB,KAAK,SAAS;;;;;;;;;;;;;+BAnBnD,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;AA6B5B;GArGwB;KAAA","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/app/src/components/BookList.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport type { Book } from \"@/lib/models/book\";\n\nexport default function BookList() {\n  const [books, setBooks] = useState<Book[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await fetch(\"/api/books\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch books\");\n        }\n        const data = await response.json();\n        setBooks(data);\n      } catch (error) {\n        setError(\"書籍の取得に失敗しました\");\n        console.error(\"Error fetching books:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchBooks();\n  }, []);\n\n  if (isLoading) {\n    return <div className=\"text-center text-gray-500\">読み込み中...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-center text-red-500\">{error}</div>;\n  }\n\n  if (books.length === 0) {\n    return (\n      <div className=\"text-center text-gray-500\">\n        保存された書籍はありません\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {books.map((book) => (\n        <div\n          key={book.id}\n          className=\"flex gap-4 p-4 border rounded-lg hover:bg-gray-50\"\n        >\n          {book.imageUrl && (\n            <img\n              src={book.imageUrl}\n              alt={book.title}\n              className=\"w-20 h-28 object-cover\"\n            />\n          )}\n          <div>\n            <h3 className=\"font-medium\">{book.title}</h3>\n            {book.authors && book.authors.length > 0 && (\n              <p className=\"text-sm text-gray-600\">{book.authors.join(\", \")}</p>\n            )}\n            {book.publisher && (\n              <p className=\"text-sm text-gray-500\">{book.publisher}</p>\n            )}\n            {book.memo && (\n              <p className=\"mt-2 text-sm text-gray-700\">{book.memo}</p>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;;AAGe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,4RAAA,CAAA,YAAS,AAAD;8BAAE;YACR,MAAM;iDAAa;oBACjB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;4BAChB,MAAM,IAAI,MAAM;wBAClB;wBACA,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,SAAS;oBACX,EAAE,OAAO,OAAO;wBACd,SAAS;wBACT,QAAQ,KAAK,CAAC,yBAAyB;oBACzC,SAAU;wBACR,aAAa;oBACf;gBACF;;YAEA;QACF;6BAAG,EAAE;IAEL,IAAI,WAAW;QACb,qBAAO,4TAAC;YAAI,WAAU;sBAA4B;;;;;;IACpD;IAEA,IAAI,OAAO;QACT,qBAAO,4TAAC;YAAI,WAAU;sBAA4B;;;;;;IACpD;IAEA,IAAI,MAAM,MAAM,KAAK,GAAG;QACtB,qBACE,4TAAC;YAAI,WAAU;sBAA4B;;;;;;IAI/C;IAEA,qBACE,4TAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,4TAAC;gBAEC,WAAU;;oBAET,KAAK,QAAQ,kBACZ,4TAAC;wBACC,KAAK,KAAK,QAAQ;wBAClB,KAAK,KAAK,KAAK;wBACf,WAAU;;;;;;kCAGd,4TAAC;;0CACC,4TAAC;gCAAG,WAAU;0CAAe,KAAK,KAAK;;;;;;4BACtC,KAAK,OAAO,IAAI,KAAK,OAAO,CAAC,MAAM,GAAG,mBACrC,4TAAC;gCAAE,WAAU;0CAAyB,KAAK,OAAO,CAAC,IAAI,CAAC;;;;;;4BAEzD,KAAK,SAAS,kBACb,4TAAC;gCAAE,WAAU;0CAAyB,KAAK,SAAS;;;;;;4BAErD,KAAK,IAAI,kBACR,4TAAC;gCAAE,WAAU;0CAA8B,KAAK,IAAI;;;;;;;;;;;;;eAnBnD,KAAK,EAAE;;;;;;;;;;AA0BtB;GAvEwB;KAAA","debugId":null}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file:///usr/src/app/app/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport BookSearch from \"@/components/BookSearch\";\nimport BookList from \"@/components/BookList\";\nimport type { Book as GoogleBook } from \"@/lib/api/google-books\";\n\nexport default function Home() {\n  const [selectedBook, setSelectedBook] = useState<GoogleBook | null>(null);\n\n  const handleBookSelect = (book: GoogleBook) => {\n    setSelectedBook(book);\n  };\n\n  return (\n    <main className=\"min-h-screen p-8\">\n      <h1 className=\"text-3xl font-bold text-center mb-8\">読書メモ</h1>\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <section className=\"lg:sticky lg:top-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">書籍検索</h2>\n          <BookSearch onSelect={handleBookSelect} />\n        </section>\n        <section>\n          <h2 className=\"text-xl font-semibold mb-4\">保存済み書籍</h2>\n          <div className=\"lg:max-h-[calc(100vh-12rem)] lg:overflow-y-auto\">\n            <BookList />\n          </div>\n        </section>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAqB;IAEpE,MAAM,mBAAmB,CAAC;QACxB,gBAAgB;IAClB;IAEA,qBACE,4TAAC;QAAK,WAAU;;0BACd,4TAAC;gBAAG,WAAU;0BAAsC;;;;;;0BACpD,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;wBAAQ,WAAU;;0CACjB,4TAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,4TAAC,mIAAA,CAAA,UAAU;gCAAC,UAAU;;;;;;;;;;;;kCAExB,4TAAC;;0CACC,4TAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,4TAAC;gCAAI,WAAU;0CACb,cAAA,4TAAC,iIAAA,CAAA,UAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMrB;GAxBwB;KAAA","debugId":null}}]
}